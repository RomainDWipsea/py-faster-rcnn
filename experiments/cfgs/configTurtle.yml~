EXP_DIR: t2
TRAIN:
# Scales to use during training (can list multiple scales)
# Each scale is the pixel size of an image's shortest side
 SCALES: [3000]

# Max pixel size of the longest side of a scaled input image
 MAX_SIZE: 4000

# Images to use per minibatch
 IMS_PER_BATCH: 1

# Minibatch size (number of regions of interest [ROIs])
 BATCH_SIZE: 256

# Fraction of minibatch that is labeled foreground (i.e. class > 0)
 FG_FRACTION: 0.25

# Overlap threshold for a ROI to be considered foreground (if >= FG_THRESH)
 FG_THRESH: 0.7

# Overlap threshold for a ROI to be considered background (class = 0 if
# overlap in [LO, HI))
 BG_THRESH_HI: 0.4
 BG_THRESH_LO: 0.0

# Use horizontally-flipped images during training?
# USE_FLIPPED: True

# Train bounding-box regressors
 BBOX_REG: True

# Overlap required between a ROI and ground-truth box in order for that ROI to
# be used as a bounding-box regression training example
 BBOX_THRESH: 0.7

# Iterations between snapshots
 SNAPSHOT_ITERS: 500

# solver.prototxt specifies the snapshot path prefix, this adds an optional
# infix to yield the path: <prefix>[_<infix>]_iters_XYZ.caffemodel
 SNAPSHOT_INFIX: 'exp9'

# Use a prefetch thread in roi_data_layer.layer
# So far I haven't found this useful; likely more engineering work is required
#USE_PREFETCH = False

# Normalize the targets (subtract empirical mean, divide by empirical stddev)
# BBOX_NORMALIZE_TARGETS: True
# Deprecated (inside weights)
#BBOX_INSIDE_WEIGHTS = (1.0, 1.0, 1.0, 1.0)
# Normalize the targets using "precomputed" (or made up) means and stdevs
# (BBOX_NORMALIZE_TARGETS must also be True)
 BBOX_NORMALIZE_TARGETS_PRECOMPUTED: True
#BBOX_NORMALIZE_MEANS = (0.0, 0.0, 0.0, 0.0)
#BBOX_NORMALIZE_STDS = (0.1, 0.1, 0.2, 0.2)

# Train using these proposals
#PROPOSAL_METHOD = 'selective_search'
 PROPOSAL_METHOD: gt
# Make minibatches from images that have similar aspect ratios (i.e. both
# tall and thin or both short and wide) in order to avoid wasting computation
# on zero-padding.
#ASPECT_GROUPING = True

# Use RPN to detect objects
 HAS_RPN: True
# IOU >= thresh: positive example
 RPN_POSITIVE_OVERLAP: 0.7
# IOU < thresh: negative example
#RPN_NEGATIVE_OVERLAP = 0.3
# If an anchor statisfied by positive and negative conditions set to negative
#RPN_CLOBBER_POSITIVES = False
# Max number of foreground examples
#RPN_FG_FRACTION = 0.5
# Total number of examples
 RPN_BATCHSIZE: 256
# NMS threshold used on RPN proposals
#RPN_NMS_THRESH = 0.7
# Number of top scoring boxes to keep before apply NMS to RPN proposals
#RPN_PRE_NMS_TOP_N = 12000
# Number of top scoring boxes to keep after applying NMS to RPN proposals
#RPN_POST_NMS_TOP_N = 2000
# Proposal height and width both need to be greater than RPN_MIN_SIZE (at orig image scale)
#RPN_MIN_SIZE = 16
# Deprecated (outside weights)
#RPN_BBOX_INSIDE_WEIGHTS = (1.0, 1.0, 1.0, 1.0)
# Give the positive RPN examples weight of p * 1 / {num positives}
# and give negatives a weight of (1 - p)
# Set to -1.0 to use uniform example weighting
#RPN_POSITIVE_WEIGHT = -1.0
TEST:
  HAS_RPN: True
  SCALES: [750]
  MAX_SIZE: 1000

